{"version":3,"file":"static/js/739.13969a91.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/Filter/filterSelector.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage/ContactsPage.jsx","HOC/WithAuthRedirect.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectFilter = state => state.filter.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/Filter/filterSelector';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectContactsSatus = state => state.contacts.status;\nexport const selectContactsError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().trim().includes(filter.toLowerCase())\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: inline-block;\n  margin: 30px auto;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding: 15px;\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n  background-color: lightgrey;\n`;\n\nexport const Label = styled.label`\n  font-size: 14px;\n  display: block;\n\n  margin-bottom: 10px;\n  text-align: left;\n  cursor: pointer;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin: 0 auto;\n  padding-left: 10px;\n  width: 250px;\n  height: 30px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  outline: transparent;\n  cursor: pointer;\n  :focus {\n    border: 3px solid #7fabe4;\n  }\n`;\n\nexport const AddButton = styled.button`\n  color: black;\n  background-color: white;\n  border-radius: 4px;\n  border: 1px solid grey;\n  cursor: pointer;\n  font-size: 14px;\n  width: 100px;\n  height: 30px;\n`;\n","import React, { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { addContactRequest } from 'redux/operations/operations';\nimport { Form, Label, Input, AddButton } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const contact = {\n    name,\n    number,\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase().trim() === name.toLowerCase()\n      )\n    ) {\n      alert(`${contact.name} is already in contacts!`);\n      return;\n    }\n\n    setName('');\n    setNumber('');\n\n    dispatch(addContactRequest(contact));\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            value={name}\n            onChange={handleInputChange}\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            value={number}\n            onChange={handleInputChange}\n            required\n          />\n        </Label>\n\n        <AddButton type=\"submit\">Add contact</AddButton>\n      </Form>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  width: 50%;\n  margin: auto;\n  padding-left: 0;\n`;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  color: white;\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  margin-top: 20px;\n  margin-right: 5px;\n  font-size: 20px;\n  font-weight: 600;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContactRequest } from 'redux/operations/operations';\nimport { ListItem } from './Contact.styled';\n\nexport const Contact = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  return (\n    <ListItem>\n      {name}: {number}\n      <button onClick={() => dispatch(deleteContactRequest(id))} type=\"button\">\n        Delete\n      </button>\n    </ListItem>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { List } from './ContactList.styled';\n\nimport { Contact } from 'components/Contact/Contact';\nimport {\n  selectContactsError,\n  selectContactsSatus,\n  selectFilteredContacts,\n} from 'redux/contacts/contactsSelectors';\nimport { getContactsRequest } from 'redux/operations/operations';\nimport { selectIsLoggedIn } from 'redux/user/userSelectors';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  //const contacts = useSelector(selectContacts);\n  const contacts = useSelector(selectFilteredContacts);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const status = useSelector(selectContactsSatus);\n  const error = useSelector(selectContactsError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n\n    dispatch(getContactsRequest());\n  }, [isLoggedIn, dispatch]);\n\n  return (\n    <>\n      {status === 'pending' && <Loader />}\n      {error !== null && <p>🙀 Something has gone wrong... Message: {error}</p>}\n      <List>\n        {contacts?.length > 0 &&\n          contacts.map(contact => {\n            return <Contact key={contact.id} {...contact} />;\n          })}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  padding: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Wrapper } from './Container.styled';\n\nexport const Container = props => {\n  return <Wrapper>{props.children}</Wrapper>;\n};\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  text-align: center;\n`;\n\nexport const FilterText = styled.p`\n  font-size: 22px;\n  font-weight: 600;\n  text-transform: uppercase;\n  margin-bottom: 8px;\n  color: white;\n`;\n\nexport const Input = styled.input`\n  padding-left: 20px;\n  margin-bottom: 20px;\n  width: 200px;\n  height: 20px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  outline: transparent;\n  background-color: lightgrey;\n  cursor: pointer;\n  :focus {\n    border: 3px solid #7fabe4;\n  }\n`;\n","import { FilterText, Input, FilterWrapper } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/Filter/filterSlice';\nimport { selectFilter } from 'redux/Filter/filterSelector';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const handleFilter = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <FilterWrapper>\n      <FilterText>Find contacts by name</FilterText>\n      <Input type=\"text\" name=\"filter\" value={filter} onChange={handleFilter} />\n    </FilterWrapper>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Container } from 'components/Container/Container';\nimport { Filter } from 'components/Filter/Filter';\nimport WithAuthRedirect from 'HOC/WithAuthRedirect';\nimport React from 'react';\n\nfunction ContactsPage() {\n  return (\n    <Container>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n\nexport default WithAuthRedirect(ContactsPage, '/sign-in');\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { selectIsLoggedIn } from 'redux/user/userSelectors';\n\nfunction WithAuthRedirect(Component, navigateTo) {\n  const ComponentWithRedirect = props => {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n\n    return isLoggedIn ? <Component {...props} /> : <Navigate to={navigateTo} />;\n  };\n\n  return ComponentWithRedirect;\n}\n\nexport default WithAuthRedirect;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilter","state","filter","selectContacts","contacts","selectContactsSatus","status","selectContactsError","error","selectFilteredContacts","contact","toLowerCase","trim","includes","Form","styled","Label","Input","AddButton","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleInputChange","event","target","onSubmit","preventDefault","some","alert","addContactRequest","type","pattern","title","onChange","required","List","ListItem","Contact","id","onClick","deleteContactRequest","ContactList","isLoggedIn","selectIsLoggedIn","useEffect","getContactsRequest","Loader","Wrapper","Container","props","children","FilterWrapper","FilterText","Filter","setFilter","Component","navigateTo","to"],"sourceRoot":""}