{"version":3,"file":"static/js/75.37c3c959.chunk.js","mappings":"2NAEaA,EAAOC,EAAAA,GAAAA,KAAH,sRAcJC,EAAYD,EAAAA,GAAAA,GAAH,4DAKTE,EAAQF,EAAAA,GAAAA,MAAH,iJASLG,EAAQH,EAAAA,GAAAA,MAAH,iOAaLI,EAAYJ,EAAAA,GAAAA,OAAH,oK,SCtCTK,EAAW,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,SAAoC,IAA1BC,YAAAA,OAA0B,SACvDC,GAAeC,EAAAA,EAAAA,UACfC,GAAgBD,EAAAA,EAAAA,UAChBE,GAAmBF,EAAAA,EAAAA,UAezB,OACE,0BACE,UAACV,EAAD,CAAMO,SAfW,SAAAM,GACnBA,EAAMC,iBAEN,IAAMC,GAAQ,mBACPP,GAAe,CAAEQ,KAAMP,EAAaQ,QAAQC,QADrC,IAEZC,MAAOR,EAAcM,QAAQC,MAC7BE,SAAUR,EAAiBK,QAAQC,QAErCX,EAASQ,GAETF,EAAMQ,OAAOC,OACd,EAIG,WACE,SAACpB,EAAD,UAAYM,EAAc,UAAY,YACrCA,EAAc,MACb,UAACL,EAAD,mBAEE,SAACC,EAAD,CACEmB,KAAK,OACLP,KAAK,OACLQ,YAAY,kBACZC,IAAKhB,EACLiB,UAAQ,QAId,UAACvB,EAAD,oBAEE,SAACC,EAAD,CACEmB,KAAK,MACLP,KAAK,QACLQ,YAAY,mBACZC,IAAKd,EACLe,UAAQ,QAGZ,UAACvB,EAAD,uBAEE,SAACC,EAAD,CACEmB,KAAK,MACLP,KAAK,WACLW,UAAW,EACXH,YAAY,sBACZC,IAAKb,EACLc,UAAQ,QAIZ,UAACrB,EAAD,CAAWkB,KAAK,SAAhB,UACG,IACAf,EAAc,UAAY,iBAKpC,C,uGCnCD,UAxBA,WACE,IAAMoB,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAQF,EAAAA,EAAAA,IAAYG,EAAAA,IAY1B,OAVAC,EAAAA,EAAAA,YAAU,WACHL,GAELF,EAAS,YACV,GAAE,CAACE,EAAYF,KAOd,2BACa,OAAVK,IAAkB,8EAA4CA,MAC/D,SAAC,IAAD,CAAU5B,SAPM,SAAAQ,GAClBa,GAASU,EAAAA,EAAAA,IAAavB,GACvB,EAKoCP,aAAW,MAGjD,C","sources":["components/UserForm/UserForm.styled.js","components/UserForm/UserForm.jsx","pages/SignInPage/SignInPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: inline-block;\n  margin: 100px auto;\n  width: 350px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  padding: 30px;\n  border: 1px solid lightgrey;\n  border-radius: 5px;\n  background-color: lightgrey;\n`;\n\nexport const FormTitle = styled.h2`\n  margin: 0 auto;\n  color: black;\n`;\n\nexport const Label = styled.label`\n  font-size: 16px;\n  display: block;\n  width: 250px;\n  margin-bottom: 10px;\n  text-align: left;\n  cursor: pointer;\n`;\n\nexport const Input = styled.input`\n  padding-left: 10px;\n  width: 250px;\n  height: 30px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  outline: transparent;\n  cursor: pointer;\n  :focus {\n    border: 3px solid #7fabe4;\n  }\n`;\n\nexport const AddButton = styled.button`\n  color: black;\n  border-radius: 4px;\n  border: 1px solid grey;\n  cursor: pointer;\n  font-size: 16px;\n  width: 80px;\n  height: 40px;\n`;\n","import React, { useRef } from 'react';\n//import PropTypes from 'prop-types';\n\nimport { Form, FormTitle, Label, Input, AddButton } from './UserForm.styled';\n\nexport const UserForm = ({ onSubmit, isLoginForm = false }) => {\n  const nameInputRef = useRef();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const formData = {\n      ...(!isLoginForm && { name: nameInputRef.current.value }),\n      email: emailInputRef.current.value,\n      password: passwordInputRef.current.value,\n    };\n    onSubmit(formData);\n\n    event.target.reset();\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <FormTitle>{isLoginForm ? 'Sign In' : 'Sign Up'}</FormTitle>\n        {isLoginForm ? null : (\n          <Label>\n            Name\n            <Input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Enter your name\"\n              ref={nameInputRef}\n              required\n            />\n          </Label>\n        )}\n        <Label>\n          Email\n          <Input\n            type=\"tel\"\n            name=\"email\"\n            placeholder=\"Enter your email\"\n            ref={emailInputRef}\n            required\n          />\n        </Label>\n        <Label>\n          Password\n          <Input\n            type=\"tel\"\n            name=\"password\"\n            minLength={7}\n            placeholder=\"Enter your password\"\n            ref={passwordInputRef}\n            required\n          />\n        </Label>\n\n        <AddButton type=\"submit\">\n          {' '}\n          {isLoginForm ? 'Sign In' : 'Sign Up'}\n        </AddButton>\n      </Form>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { loginRequest } from '../../redux/operations/operations';\n\nimport { UserForm } from '../../components/UserForm/UserForm';\nimport { useNavigate } from 'react-router-dom';\nimport { selectAuthError, selectIsLoggedIn } from 'redux/user/userSelectors';\n\nfunction SignInPage() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const error = useSelector(selectAuthError);\n\n  useEffect(() => {\n    if (!isLoggedIn) return;\n\n    navigate('/contacts');\n  }, [isLoggedIn, navigate]);\n\n  const handleLogin = formData => {\n    dispatch(loginRequest(formData));\n  };\n\n  return (\n    <div>\n      {error !== null && <p>ðŸ™€ Something has gone wrong... Message: {error}</p>}\n      <UserForm onSubmit={handleLogin} isLoginForm />\n    </div>\n  );\n}\n\nexport default SignInPage;\n"],"names":["Form","styled","FormTitle","Label","Input","AddButton","UserForm","onSubmit","isLoginForm","nameInputRef","useRef","emailInputRef","passwordInputRef","event","preventDefault","formData","name","current","value","email","password","target","reset","type","placeholder","ref","required","minLength","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","useSelector","selectIsLoggedIn","error","selectAuthError","useEffect","loginRequest"],"sourceRoot":""}